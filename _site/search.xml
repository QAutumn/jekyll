<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Flask+IIS+微信小程序开发指南]]></title>
      <url>/tutorial/2020/03/18/mangoOfwx/</url>
      <content type="text"><![CDATA[  本项目已上传至Github，地址：https://github.com/QAutumn/mangoOfwechat.git开发环境  Windows Server 2016  数据中心版 64位  Python 3.7.6  Flask 1.1.1  Werkzeug 1.0.0申请小程序账号登录『微信小程序官方网站』，根据指引填写信息和提交相应的资料，就可以拥有自己的小程序帐号。登录「微信小程序管理页面」，通过点击「设置」-&gt;『开发设置』即可看到小程序ID，此ID为该小程序的唯一标志符。下载微信开发者工具通过「微信小程序官方文档」下载微信开发者工具，我的版本为，macOS 稳定版 Stable Build (1.02.1911180)。安装后点击新建项目，设置「项目名称」、『目录』。注意，在这里需要将AppID字段设置为刚才在「微信小程序管理页面」看到的AppID，否则小程序将无法发布。设置完毕后，点击「新建」便可看到小程序正式的开发界面，这里有几个需要注意的地方：  微信小程序开发工具不允许直接将图片等资源直接拖入文件夹，需要打开新建项目时的目录，手动复制进去即可。  Pages文件夹中包含小程序的所有页面，每个页面包含的.js，.wxml以及.wxss分别代表前端中的.js，.html以及.css。  整个项目的大小不得超过2M，否则无法发布。  小程序所需图片资源可通过Base64转换工具直接生成URL引用，无需包含到本地目录中。  若需和自己的服务器进行交互，小程序仅支持HTTPS协议，若在开发过程中勾选了「TLS版本以及HTTPS协议证书」，则仅在本地测试时可以通过，但无法发布。Flask服务器  Flask是一个轻量级的可定制框架，使用Python语言编写，较其他同类型框架更为灵活、轻便、安全且容易上手。它可以很好地结合MVC模式进行开发，开发人员分工合作，小型团队在短时间内就可以完成功能丰富的中小型网站或Web服务的实现。另外，Flask还有很强的定制性，用户可以根据自己的需求来添加相应的功能，在保持核心功能简单的同时实现功能的丰富与扩展，其强大的插件库可以让用户实现个性化的网站定制，开发出功能强大的网站。先贴上服务器端的代码：from flask import Flask,requestimport osimport Mytest as mapp = Flask(__name__)@app.route('/',methods=['GET'])def hello():        return 'hello'@app.route('/upload_image',methods = ['POST'])def upload_image():	print('get')	print(request)	print(request.files)	img = request.files.get('picture')	img.save('./674.jpg')	ans=m.model_predict();	print( ans)	return ansif __name__ == '__main__':   app.run(debug = True,host='0.0.0.0',port=8080,ssl_context=("cert.pem","key.pem"))这里定义了upload_image()这个方法用来处理微信小程序端的请求，将通过HTTPS协议上传的图片保存至./674.jpg后，调用model_predict()这个函数来对图片进行识别，并把结果作为ans返回给小程序。  这里有一个千万要注意的地方，那就是需要在Flask代码中手动设置SSL证书！！！      在服务器中安装IIS,步骤为：「服务器管理器」-&gt;「添加角色」-&gt;『Web服务器(IIS)』。        众所周知，想要使用HTTPS协议，就必须先申请SSL证书，并将其绑定到服务器，这里我使用腾讯云申请的免费SSL证书，具体申请过程请见我的上一篇博客「WinServer+jekyll+腾讯云实现自己的个人主页」。        打开IIS，在默认网站页面添加绑定，其中80端口绑定HTTP协议，443端口绑定HTTPS协议。(此步骤可省略)，因在上一步flask设置过程中已经将端口设置为8080。    由于腾讯云申请的证书中，IIS文件夹中只有.pfx格式的证书，所以必须将其转为.pem证书，这是最关键的一步，否则小程序端将报错TLS版本必须小于等于1.2。本人在这里走了不少弯路，网上教程我没有找到任何一篇明确指出要这么做，纯粹是个人运气摸索出来的。附上.pfx证书转换为.pem格式证书的代码（首先要确保服务器已经安装OPENSSL，在此不再赘述）    openssl pkcs12 -in certname.pfx -nocerts -out key.pem -nodes //提取公钥openssl pkcs12 -in certname.pfx -nokeys -out cert.pem //提取私钥        在服务器上安装IISCrypto或SLLTools这两个软件（任选其一）。确保只有TLS1.2协议被勾选，并重新启动服务器。    运行app.py，如果正常的话，应该可以看到服务器已经在https://0.0.0.0:8080/端口上运行了，大功告成！  本人目前为在校学生，能力一般，水平有限，如果您有任何问题或想法，欢迎随时与我联系。More Details：Setting up your GitHub Pages site locally with Jekyll]]></content>
      <categories>
        
          <category> Tutorial </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[WinServer+jekyll+腾讯云实现自己的个人主页]]></title>
      <url>/tutorial/2020/03/18/Tencent-tutorial/</url>
      <content type="text"><![CDATA[经过几天的努力，终于搭好了自己的第一个个人博客，放鞭！❤  期间踩了无数的坑，好在最后结果还算令人满意，唯一的遗憾是Jekyll似乎不支持在云服务器上使用HTTPS协议，所以目前浏览器的地址栏会提示不安全，逼死强迫症。但听说使用HTTPS协议会明显降低网页加载速度，所以有大佬即使配置成功后依然使用HTTP协议加载，em…那就先这样吧。开发环境  Windows Server 2016  数据中心版 64位  Jekyll 3.7.4  Gem 2.6.11.4  Bundle 2.1.4腾讯云服务器的搭建购买云服务器首先进入腾讯云首页，在下方找到「学生机」，价格为10元/月，未满25岁可以免学生认证，这里不得不cue一下垃圾阿里云，由于我本科期间在阿里云购买过学生机，导致我的研究生学号无法继续认证，不过也正因如此，才让我发现了腾讯云这个神仙服务器。设置安全组规则购买服务器后，进入安全组，打开必要的端口，如HTTPS协议的默认端口为443，HTTP协议的默认端口为80，远程桌面连接的端口为3389。购买域名域名是用来映射到IP上，便于直接使用域名访问其绑定IP所在的服务器。虽然直接用IP和端口的形式也可以访问到我们购买的云服务器，但是一来IP不好记，二来因为我还同时开发微信小程序，微信不允许使用IP加端口形式的url。所以只能购买一个域名了。购买的过程也非常简单，只要挑选好喜欢的域名购买就可以了，我买了一年的.cn顶级域名，也只花了几十块，腾讯云域名购买链接。域名解析买好了域名，那这个域名怎么用呢，不和IP配套使用的域名是没有任何意义的域名。这里我们需要将这个域名或者其子域名绑定在我们需要对外提供服务的服务器所对应的IP上，也就是我刚刚购买的云服务器的IP上。在腾讯云后台的云解析里，自动解析你的域名，其中，www字段代表将www.你的域名.cn这个网址解析到你的IP地址，@表示将二级域名xxx.com同样映射到你的IP地址，这样将来不管你是在服务器上输入「你的域名.cn」还是『www.你的域名.cn』都可以直接访问。域名备案普天之下莫非王土，互联网不是法外之地，试想，假设申请域名不需要备案，那岂不是人人都可以上线一个「por**ub.com」了？，所以，不管是什么域名，都需要向国家报备，接受监管。通过扫码进入腾讯云的小程序备案页面，开始走流程。  主要流程包括下面几个：          (1) 办理幕布拍照      (2) 验证备案信息      (3) 填写主体信息      (4) 填写网站信息      (5) 上传材料      (6) 确认备案信息，提交初审      (7) 通过审核，完成备案      注意！网站的名称不要乱填，之前手贱随便写了一个，结果后来腾讯云的小姐姐打来电话受不可以，又改城『个人爱好』，重新提交的申请，浪费了时间。这个过程比较漫长，我等了大概四五天左右。申请SSL证书哦不，因为我还没搞懂Jekyll如何部署HTTPS协议，所以配置好证书后发现也没啥用，这步就先跳过了，哪位大神知道怎么弄的话可以教教我，感激不尽。后端服务器的配置首先去Ruby官网下载『Ruby+Devkit 2.4.9-1 (x64)』注意！！！踩坑警告！！！即使不安装这个版本，也一定要安装2.6.0版本一下，否则后面会报错！！！Could not find gem 'ruby  (&lt; 2.6)', which is required by gem 'nokogiri (&gt;= 1.8.2, &lt; 2.0)',害的我又卸载重新装……检查 Ruby 2.6.0 或更低版本已经安装：ruby --versionInstall Bundler：gem install bundler接下来就可以登录Jekyll官网选择一个喜欢的主题啦，我大概浏览了一下，高质量的主题还是很多哒，这里不得不安利一下NexT这个神仙主题，强推，第一眼看到就爱上了它，话不多说，直接git clone:git clone https://github.com/Simpleyyt/jekyll-theme-next.gitcd jekyll-theme-next安装Jekyll所需要的依赖：bundle install在本地运行Jekyll：bundle exec jekyll server此时在『http://localhost:4000』上应该就能看到你的页面已经部署成功啦！！！那么如何允许Jekyll被公网访问呢？答案很简单，只需要将命令改为：bundle exec jekyll serve -H 0.0.0.0 -P 80即可，其中，0.0.0.0代表允许所有入站，80代表开放端口，可自行选择，由于HTTP协议的默认开放端口为80，所以我选择继续使用80，这样可以直接访问『www.autumnqq.cn』而不是『www.autumnqq.cn:81』（这里拿81端口举个例子）。让我们怀着激动地心情打开浏览器，输入『www.你的域名.cn』，是不是已经可以了呢？恭喜！你也拥有了自己的网站。  这是我第一次在网上写教程，能力一般，水平有限，纰漏在所难免，还请各位看官多多包涵。若有任何问题，欢迎随时与我保持联系。More Details：Setting up your GitHub Pages site locally with Jekyll]]></content>
      <categories>
        
          <category> Tutorial </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[WinServer+jekyll+腾讯云实现自己的个人主页]]></title>
      <url>/tutorial/2017/07/20/next-tutorial/</url>
      <content type="text"><![CDATA[经过几天的努力，终于搭好了自己的第一个个人博客，放鞭！❤  期间踩了无数的坑，好在最后结果还算令人满意，唯一的遗憾是Jekyll似乎不支持在云服务器上使用HTTPS协议，所以目前浏览器的地址栏会提示不安全，逼死强迫症。但听说使用HTTPS协议会明显降低网页加载速度，所以有大佬即使配置成功后依然使用HTTP协议加载，em…那就先这样吧。开发环境  Windows Server 2016  数据中心版 64位  Jekyll 3.7.4  Gem 2.6.11.4  Bundle 2.1.4腾讯云服务器的搭建购买云服务器首先进入腾讯云首页，在下方找到「学生机」，价格为10元/月，未满25岁可以免学生认证，这里不得不cue一下垃圾阿里云，由于我本科期间在阿里云购买过学生机，导致我的研究生学号无法继续认证，不过也正因如此，才让我发现了腾讯云这个神仙服务器。设置安全组规则购买服务器后，进入安全组，打开必要的端口，如HTTPS协议的默认端口为443，HTTP协议的默认端口为80，远程桌面连接的端口为3389。购买域名域名是用来映射到IP上，便于直接使用域名访问其绑定IP所在的服务器。虽然直接用IP和端口的形式也可以访问到我们购买的云服务器，但是一来IP不好记，二来因为我还同时开发微信小程序，微信不允许使用IP加端口形式的url。所以只能购买一个域名了。购买的过程也非常简单，只要挑选好喜欢的域名购买就可以了，我买了一年的.cn顶级域名，也只花了几十块，腾讯云域名购买链接。域名解析买好了域名，那这个域名怎么用呢，不和IP配套使用的域名是没有任何意义的域名。这里我们需要将这个域名或者其子域名绑定在我们需要对外提供服务的服务器所对应的IP上，也就是我刚刚购买的云服务器的IP上。在腾讯云后台的云解析里，自动解析你的域名，其中，www字段代表将www.你的域名.cn这个网址解析到你的IP地址，@表示将二级域名xxx.com同样映射到你的IP地址，这样将来不管你是在服务器上输入「你的域名.cn」还是『www.你的域名.cn』都可以直接访问。域名备案普天之下莫非王土，互联网不是法外之地，试想，假设申请域名不需要备案，那岂不是人人都可以上线一个「por**ub.com」了？，所以，不管是什么域名，都需要向国家报备，接受监管。通过扫码进入腾讯云的小程序备案页面，开始走流程。  主要流程包括下面几个：          (1) 办理幕布拍照      (2) 验证备案信息      (3) 填写主体信息      (4) 填写网站信息      (5) 上传材料      (6) 确认备案信息，提交初审      (7) 通过审核，完成备案      注意！网站的名称不要乱填，之前手贱随便写了一个，结果后来腾讯云的小姐姐打来电话受不可以，又改城『个人爱好』，重新提交的申请，浪费了时间。这个过程比较漫长，我等了大概四五天左右。申请SSL证书哦不，因为我还没搞懂Jekyll如何部署HTTPS协议，所以配置好证书后发现也没啥用，这步就先跳过了，哪位大神知道怎么弄的话可以教教我，感激不尽。后端服务器的配置首先去Ruby官网下载『Ruby+Devkit 2.4.9-1 (x64)』注意！！！踩坑警告！！！即使不安装这个版本，也一定要安装2.6.0版本一下，否则后面会报错！！！Could not find gem 'ruby  (&lt; 2.6)', which is required by gem 'nokogiri (&gt;= 1.8.2, &lt; 2.0)',害的我又卸载重新装……检查 Ruby 2.6.0 或更低版本已经安装：ruby --versionInstall Bundler：gem install bundler接下来就可以登录Jekyll官网选择一个喜欢的主题啦，我大概浏览了一下，高质量的主题还是很多哒，这里不得不安利一下NexT这个神仙主题，强推，第一眼看到就爱上了它，话不多说，直接git clone:git clone https://github.com/Simpleyyt/jekyll-theme-next.gitcd jekyll-theme-next安装Jekyll所需要的依赖：bundle install在本地运行Jekyll：bundle exec jekyll server此时在『http://localhost:4000』上应该就能看到你的页面已经部署成功啦！！！那么如何允许Jekyll被公网访问呢？答案很简单，只需要将命令改为：bundle exec jekyll serve -H 0.0.0.0 -P 80即可，其中，0.0.0.0代表允许所有入站，80代表开放端口，可自行选择，由于HTTP协议的默认开放端口为80，所以我选择继续使用80，这样可以直接访问『www.autumnqq.cn』而不是『www.autumnqq.cn:81』（这里拿81端口举个例子）。让我们怀着激动地心情打开浏览器，输入『www.你的域名.cn』，是不是已经可以了呢？恭喜！你也拥有了自己的网站。  这是我第一次在网上写教程，能力一般，水平有限，纰漏在所难免，还请各位看官多多包涵。若有任何问题，欢迎随时与我保持联系。More Details：Setting up your GitHub Pages site locally with Jekyll]]></content>
      <categories>
        
          <category> Tutorial </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Highlight Test]]></title>
      <url>/test/2017/07/19/highlight-test/</url>
      <content type="text"><![CDATA[This is a highlight test.Normal blockalert('Hello World!');print 'helloworld'Highlight blockalert( 'Hello, world!' );print 'helloworld'def foo  puts 'foo'enddef foo  puts 'foo'end123def foo  puts 'foo'end#include &lt;iostream&gt;using namespace std;void foo(int arg1, int arg2){}int main(){  string str;  foo(1, 2);  cout &lt;&lt; "Hello World" &lt;&lt; endl;  return 0;}]]></content>
      <categories>
        
          <category> Test </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Emoji Test]]></title>
      <url>/2015/09/19/emoji-test/</url>
      <content type="text"><![CDATA[This is an emoji test. :smile: lol.See emoji cheat sheet for more detail :wink: : https://www.webpagefx.com/tools/emoji-cheat-sheet/.:bowtie::smile::laughing::blush::smiley::relaxed::smirk::heart_eyes::kissing_heart::kissing_closed_eyes::flushed::relieved::satisfied::grin:]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Gallery Post]]></title>
      <url>/photo/2014/11/18/gallery-post/</url>
      <content type="text"><![CDATA[Nunc dignissim volutpat enim, non sollicitudin purus dignissim id. Nam sit amet urna eu velit lacinia eleifend. Proin auctor rhoncus ligula nec aliquet. Donec sodales molestie lacinia. Curabitur dictum faucibus urna at convallis. Aliquam in lectus at urna rutrum porta. In lacus arcu, molestie ut vestibulum ut, rhoncus sed eros. Sed et elit vitae risus pretium consectetur vel in mi. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tempus turpis quis lectus rhoncus adipiscing. Proin pulvinar placerat suscipit. Maecenas imperdiet, quam vitae varius auctor, enim mauris vulputate sapien, nec laoreet neque diam non quam.Etiam luctus mauris at mi sollicitudin quis malesuada nibh porttitor. Vestibulum non dapibus magna. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin feugiat hendrerit viverra. Phasellus sit amet nunc mauris, eu ultricies tellus. Sed a mi tortor, eleifend varius erat. Proin consectetur molestie tortor eu gravida. Cras placerat orci id arcu tristique ut rutrum justo pulvinar. Maecenas lacinia fringilla diam non bibendum. Aenean vel viverra turpis. Integer ut leo nisi. Pellentesque vehicula quam ut sapien convallis consequat. Aliquam ut arcu purus, eget tempor purus. Integer eu tellus quis erat tristique gravida eu vel lorem.]]></content>
      <categories>
        
          <category> Photo </category>
        
      </categories>
      <tags>
        
          <tag> consectetur </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[MathJax with Jekyll]]></title>
      <url>/opinion/2014/02/16/Mathjax-with-jekyll/</url>
      <content type="text"><![CDATA[One of the rewards of switching my website to Jekyll is theability to support MathJax, which means I can write LaTeX-like equations that getnicely displayed in a web browser, like this one \( \sqrt{\frac{n!}{k!(n-k)!}} \) orthis one \( x^2 + y^2 = r^2 \).What’s MathJax?If you check MathJax website (www.mathjax.org) you’ll seethat it is an open source JavaScript display engine for mathematics that works in allbrowsers.How to implement MathJax with JekyllI followed the instructions described by Dason Kurkiewicz forusing Jekyll and Mathjax.Here are some important details. I had to modify the Ruby library for Markdown inmy _config.yml file. Now I’m using redcarpet so the corresponding line in theconfiguration file is: markdown: redcarpetTo load the MathJax javascript, I added the following lines in my layout post.html(located in my folder _layouts)&lt;script type="text/javascript"    src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;&lt;/script&gt;Of course you can choose a different file location in your jekyll layouts.Note that by default, the tex2jax preprocessor defines theLaTeX math delimiters, which are \\(...\\) for in-line math, and \\[...\\] fordisplayed equations. It also defines the TeX delimiters $$...$$ for displayedequations, but it does not define $...$ as in-line math delimiters. To enable in-line math delimiter with $...$, please use the following configuration:&lt;script type="text/x-mathjax-config"&gt;MathJax.Hub.Config({  tex2jax: {    inlineMath: [['$','$'], ['\\(','\\)']],    processEscapes: true  }});&lt;/script&gt;&lt;script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"&gt;&lt;/script&gt;A Couple of ExamplesHere’s a short list of examples. To know more about the details behind MathJax, you canalways checked the provided documentation available athttp://docs.mathjax.org/en/latest/Let’s try a first example. Here’s a dummy equation:How do you write such expression? Very simple: using double dollar signs$$a^2 + b^2 = c^2$$To display inline math use \\( ... \\) like this \\( sin(x^2) \\) which getsrendered as \( sin(x^2) \)Here’s another example using type \mathsf$$ \mathsf{Data = PCs} \times \mathsf{Loadings} $$which gets displayed asOr even better:\\[ \mathbf{X} = \mathbf{Z} \mathbf{P^\mathsf{T}} \\]is displayed as\[ \mathbf{X} = \mathbf{Z} \mathbf{P^\mathsf{T}} \]If you want to use subscripts like this \( \mathbf{X}_{n,p} \) you need to scape theunderscores with a backslash like so \mathbf{X}\_{n,p}:$$ \mathbf{X}\_{n,p} = \mathbf{A}\_{n,k} \mathbf{B}\_{k,p} $$will be displayed as\[ \mathbf{X}_{n,p} = \mathbf{A}_{n,k} \mathbf{B}_{k,p} \]]]></content>
      <categories>
        
          <category> opinion </category>
        
      </categories>
      <tags>
        
          <tag> resources </tag>
        
          <tag> jekyll </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Images]]></title>
      <url>/2013/12/27/images/</url>
      <content type="text"><![CDATA[This is a image test post.]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Excerpts]]></title>
      <url>/2013/12/25/excerpts/</url>
      <content type="text"><![CDATA[The following contents should be invisible in home/archive page.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam.Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Block]]></title>
      <url>/foo/2013/12/25/block/</url>
      <content type="text"><![CDATA[This post is used for testing tag plugins. See docs for more info.Block QuoteNormal blockquote  Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.Code BlockInline code blockThis is a inline code block: python, print 'helloworld'.Normal code blockalert('Hello World!');print "Hello world"Highlight code blockprint "Hello world"def foo  puts 'foo'end123def foo  puts 'foo'endGist]]></content>
      <categories>
        
          <category> Foo </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[日本語テスト]]></title>
      <url>/2013/12/25/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%86%E3%82%B9%E3%83%88/</url>
      <content type="text"><![CDATA[This is a Japanese test post.私は昨日ついにその助力家というのの上よりするたなけれ。最も今をお話団はちょうどこの前後なかろでくらいに困りがいるたをは帰着考えたなかって、そうにもするでうたらない。がたを知っないはずも同時に九月をいよいよたありた。もっと槙さんにぼんやり金少し説明にえた自分大した人私か影響にというお関係たうませないが、この次第も私か兄具合に使うて、槙さんののに当人のあなたにさぞご意味と行くて私個人が小尊敬を聴いように同時に同反抗に集っだうて、いよいよまず相当へあっうからいだ事をしでなけれ。  それでそれでもご時日をしはずはたったいやと突き抜けるますて、その元がは行ったてという獄を尽すていけですた。この中道具の日その学校はあなたごろがすまなりかとネルソンさんの考えるですん、辺の事実ないというご盲従ありたですと、爺さんのためが薬缶が結果までの箸の当時してならて、多少の十月にためからそういう上からとにかくしましないと触れべきものたで、ないうですと多少お人達したのでたた。From すぐ使えるダミーテキスト - 日本語 Lorem ipsum]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[中文測試]]></title>
      <url>/test/test/2013/12/25/%E4%B8%AD%E6%96%87%E6%B8%AC%E8%A9%A6/</url>
      <content type="text"><![CDATA[This is a Chinese test post.善我王上魚、產生資西員合兒臉趣論。畫衣生這著爸毛親可時，安程幾？合學作。觀經而作建。都非子作這！法如言子你關！手師也。以也座論頭室業放。要車時地變此親不老高小是統習直麼調未，行年香一？就竟在，是我童示讓利分和異種百路關母信過明驗有個歷洋中前合著區亮風值新底車有正結，進快保的行戰從：弟除文辦條國備當來際年每小腳識世可的的外的廣下歌洲保輪市果底天影；全氣具些回童但倒影發狀在示，數上學大法很，如要我……月品大供這起服滿老？應學傳者國：山式排只不之然清同關；細車是！停屋常間又，資畫領生，相們制在？公別的人寫教資夠。資再我我！只臉夫藝量不路政吃息緊回力之；兒足灣電空時局我怎初安。意今一子區首者微陸現際安除發連由子由而走學體區園我車當會，經時取頭，嚴了新科同？很夫營動通打，出和導一樂，查旅他。坐是收外子發物北看蘭戰坐車身做可來。道就學務。國新故。  工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？From 亂數假文產生器 - Chinese Lorem Ipsum]]></content>
      <categories>
        
          <category> test/test </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam justo turpis, tincidunt ac convallis id.]]></title>
      <url>/foo/2013/12/25/long-title/</url>
      <content type="text"><![CDATA[This post has a long title. Make sure the title displayed right.]]></content>
      <categories>
        
          <category> Foo </category>
        
      </categories>
      <tags>
        
          <tag> Foo </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Categories]]></title>
      <url>/foo/bar/baz/2013/12/25/categories/</url>
      <content type="text"><![CDATA[This post contains 3 categories. Make sure your theme can display all of the categories.]]></content>
      <categories>
        
          <category> Foo </category>
        
          <category> Bar </category>
        
          <category> Baz </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Link Post]]></title>
      <url>/foo/2013/12/25/link-post/</url>
      <content type="text"><![CDATA[This is a link post. Clicking on the link should open Google in a new tab or window.]]></content>
      <categories>
        
          <category> Foo </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Tags]]></title>
      <url>/foo/2013/12/25/tags/</url>
      <content type="text"><![CDATA[This post contains 3 tags. Make sure your theme can display all of the tags.]]></content>
      <categories>
        
          <category> Foo </category>
        
      </categories>
      <tags>
        
          <tag> Foo </tag>
        
          <tag> Bar </tag>
        
          <tag> Baz </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Elements]]></title>
      <url>/foo/2013/12/25/elements/</url>
      <content type="text"><![CDATA[The purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don’t forget to redefine the style by yourself.Heading 1Heading 2Heading 3Heading 4Heading 5Heading 6ParagraphLorem ipsum dolor sit amet, test link consectetur adipiscing elit. Strong text pellentesque ligula commodo viverra vehicula. Italic text at ullamcorper enim. Morbi a euismod nibh. Underline text non elit nisl. Deleted text tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed erat diam, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.  Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.List TypesDefinition List (dl)Definition List TitleThis is a definition list division.Ordered List (ol)  List Item 1  List Item 2  List Item 3Unordered List (ul)  List Item 1  List Item 2  List Item 3Table            Table Header 1      Table Header 2      Table Header 3                  Division 1      Division 2      Division 3              Division 1      Division 2      Division 3              Division 1      Division 2      Division 3      Misc Stuff - abbr, acronym, sub, sup, etc.Lorem superscript dolor subscript amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. cite. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. NBA Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  AVE]]></content>
      <categories>
        
          <category> Foo </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
